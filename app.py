# -*- coding: utf-8 -*-
"""Untitled18.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-6a2gzRjSFJsHHrH-XoP5cvKkTmE9-P1
"""

import streamlit as st
import pandas as pd
import numpy as np
import joblib
from sklearn.datasets import load_iris

# Load model and data
model = joblib.load('naive_bayes_model.pkl')
iris = load_iris()

# Sidebar navigation
st.sidebar.title("Iris Classifier Navigation")
page = st.sidebar.radio("Go to", ["Data Description", "Prediction", "About the Project"])

# Page 1: Data Description
if page == "Data Description":
    st.title("üå∏ Iris Dataset Description")
    df = pd.DataFrame(iris.data, columns=iris.feature_names)
    df["target"] = iris.target
    df["species"] = df["target"].map(dict(zip(range(3), iris.target_names)))

    st.write("### Sample of Iris Dataset")
    st.dataframe(df.head())

    st.write("### Dataset Info")
    st.markdown(f"- Number of Samples: {df.shape[0]}")
    st.markdown(f"- Number of Features: {df.shape[1]-2}")
    st.markdown(f"- Target Classes: {', '.join(iris.target_names)}")

    st.write("### Class Distribution")
    st.bar_chart(df["species"].value_counts())

# Page 2: Prediction
elif page == "Prediction":
    st.title("üîç Predict Iris Flower")

    st.write("Input the features to predict the Iris species")

    sepal_length = st.slider("Sepal length (cm)", 4.0, 8.0, 5.1)
    sepal_width = st.slider("Sepal width (cm)", 2.0, 4.5, 3.5)
    petal_length = st.slider("Petal length (cm)", 1.0, 7.0, 1.4)
    petal_width = st.slider("Petal width (cm)", 0.1, 2.5, 0.2)

    input_data = np.array([[sepal_length, sepal_width, petal_length, petal_width]])
    prediction = model.predict(input_data)[0]
    predicted_species = iris.target_names[prediction]

    if st.button("Predict"):
        st.success(f"The predicted species is: **{predicted_species.capitalize()}**")

# Page 3: About the Project
elif page == "About the Project":
    st.title("üìò About This Project")
    st.markdown("""
    This web app demonstrates the classification of the Iris dataset using the **Naive Bayes classifier**.

    **Built with:**
    - Python
    - Scikit-learn
    - Streamlit

    **Pages:**
    - Dataset Overview
    - Interactive Prediction
    - Project Details

    ‚ú® Created by [Your Name].
    """)